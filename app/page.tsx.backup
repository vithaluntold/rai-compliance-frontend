"use client"

import { ChatInterface } from "@/components/chat"
import { Toaster } from "@/components/ui/toaster"

export default function Home() {
  return (
    <div className="h-screen">
      <ChatInterface />
      <Toaster />
    </div>
  )
}

export default function Home() {
  const [fileId, setFileId] = useState<string | null>(null)
  const [fileName, setFileName] = useState<string | null>(null)
  const [pdfUrl, setPdfUrl] = useState<string | null>(null)
  const [mounted, setMounted] = useState(false)
  const [isUploading, setIsUploading] = useState(false)
  const [uploadProgress, setUploadProgress] = useState(0)
  const [isNavigating, setIsNavigating] = useState(false)
  const [processingStatus, setProcessingStatus] = useState<string | null>(null)
  const [pollingInterval, setPollingInterval] = useState<NodeJS.Timeout | null>(null)
  const { toast } = useToast()
  const router = useRouter()

  useEffect(() => {
    setMounted(true)
    
    // Clean up any intervals when the component unmounts
    return () => {
      if (pollingInterval) {
        clearInterval(pollingInterval);
      }
    };
  }, [pollingInterval])

  // This function will be called by the FileUpload component when a file is selected
  const handleFileSelected = (file: File, url: string) => {
    setFileName(file.name);
    setPdfUrl(url);
  };

  "use client"

import { ChatInterface } from "@/components/chat"
import { Toaster } from "@/components/ui/toaster"

export default function Home() {
  return (
    <div className="h-screen">
      <ChatInterface />
      <Toaster />
    </div>
  )
}

  const handleUploadStart = () => {
    setIsUploading(true);
    setUploadProgress(0);
    setProcessingStatus(null);
    
    // Simulate progressive upload
    const interval = setInterval(() => {
      setUploadProgress(prev => {
        const newProgress = prev + 5;
        if (newProgress >= 90) {
          clearInterval(interval);
          return 90; // Max progress before completion
        }
        return newProgress;
      });
    }, 300);
    
    return () => clearInterval(interval);
  };

  if (!mounted) return null

  return (
      <div className="min-h-screen bg-gradient-to-b from-gray-50 to-gray-100">
      <header className="bg-[hsl(var(--rai-primary))] text-white shadow-xl border-b border-[hsl(var(--rai-primary))/20]">
          <div className="container mx-auto px-6 py-6">
            <motion.div
              initial={{ opacity: 0, y: -20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.5 }}
              className="flex justify-between items-center"
            >
              <div className="flex items-center space-x-4">
                <div className="relative w-12 h-12 overflow-hidden rounded-2xl bg-white/10 p-2 border border-white/20">
                  <Image src="/logo.png" alt="RAi Logo" fill className="object-contain" priority />
                </div>
                <div>
                  <h1 className="text-2xl font-bold">RAi Compliance Engine</h1>
                  <p className="text-sm text-blue-100">Facilitating the best possible future</p>
                </div>
              </div>
            </motion.div>
          </div>
        </header>

      <main className="container mx-auto px-6 py-12 max-w-6xl">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5 }}
          className="space-y-12"
        >
          <div className="text-center max-w-4xl mx-auto">
            <h2 className="text-4xl font-bold text-gray-900 mb-4">AI-Powered Financial Compliance Analysis</h2>
            <p className="text-gray-600 text-xl leading-relaxed mb-3">
              Upload your financial report to automatically verify compliance with international accounting standards using our advanced AI engine.
            </p>
            <p className="text-sm text-gray-500 italic">
              Driven by our team of future enablers
            </p>
          </div>

          <div className="bg-white rounded-2xl shadow-xl border border-gray-100 overflow-hidden max-w-4xl mx-auto">
            <div className="bg-gradient-to-r from-[hsl(var(--rai-primary))/5] to-[hsl(var(--rai-primary))/10] px-8 py-6 border-b border-gray-100">
              <h3 className="text-xl font-semibold text-gray-900">Upload Document</h3>
              <p className="text-gray-600 mt-1">Select your financial report for AI-powered compliance analysis</p>
            </div>
            
            <div className="p-8">
              <FileUpload 
                onUploadComplete={handleUploadComplete} 
                onFileSelected={handleFileSelected}
                onUploadStart={handleUploadStart}
              />
              
              {/* Upload Progress Bar */}
              {isUploading && (
                <div className="mt-6 space-y-3">
                  <div className="flex justify-between text-sm font-medium">
                    <span className="text-gray-700">Uploading document...</span>
                    <span className="text-[hsl(var(--rai-primary))]">{uploadProgress}%</span>
                  </div>
                  <Progress value={uploadProgress} className="w-full h-2" />
                </div>
              )}
              
              {/* Processing Status Indicator */}
              {processingStatus && (
                <div className="mt-6 space-y-3">
                  <div className="flex items-center justify-center gap-3 text-[hsl(var(--rai-primary))] bg-[hsl(var(--rai-primary))/10] p-4 rounded-xl">
                    <div className="w-6 h-6 bg-[hsl(var(--rai-primary))/10] rounded-lg flex items-center justify-center">
                      <Loader2 className="h-4 w-4 animate-spin" />
                    </div>
                    <span className="font-medium">{processingStatus}</span>
                  </div>
                  <Progress value={isNavigating ? 50 : 0} className="w-full h-2" />
                </div>
              )}
              
              {/* Navigation Indicator */}
              {isNavigating && !processingStatus && (
                <div className="mt-6 flex items-center justify-center gap-3 text-[hsl(var(--rai-primary))] bg-[hsl(var(--rai-primary))/10] p-4 rounded-xl">
                  <div className="w-6 h-6 bg-[hsl(var(--rai-primary))/10] rounded-lg flex items-center justify-center">
                    <Loader2 className="h-4 w-4 animate-spin" />
                  </div>
                  <span className="font-medium">Navigating to analysis page...</span>
                </div>
              )}
            </div>
          </div>

          {/* Document Preview Section - Only shown when a file is selected */}
          {pdfUrl && !isNavigating && (
            <div className="bg-white rounded-2xl shadow-xl border border-gray-100 overflow-hidden max-w-4xl mx-auto">
              <div className="bg-gradient-to-r from-gray-50 to-gray-100 px-8 py-6 border-b border-gray-200">
                <h3 className="text-xl font-semibold text-gray-900">Document Preview</h3>
                <p className="text-gray-600 mt-1">Review your uploaded document</p>
              </div>
              <div className="p-8">
                <div className="border border-gray-200 rounded-xl overflow-hidden">
                  <div className="flex flex-col items-center">
                    <div className="bg-gray-50 w-full max-w-2xl overflow-hidden">
                      {/* PDF preview using iframe */}
                      <div className="aspect-[3/4] relative">
                        <iframe 
                          src={pdfUrl}
                          className="w-full h-[600px] border-0" 
                          title="PDF Preview"
                        />
                      </div>
                    </div>
                    {fileName && (
                      <div className="w-full max-w-2xl bg-gray-50 px-6 py-4 border-t border-gray-200">
                        <p className="text-gray-800 font-medium text-center">
                          {fileName}
                        </p>
                      </div>
                    )}
                  </div>
                </div>
              </div>
            </div>
          )}

          <div className="flex justify-center">
            <Button
              onClick={() => {
                if (fileId) {
                  // Check status before navigating
                  setIsNavigating(true);
                  setProcessingStatus("Checking document status...");
                  
                  api.analysis.getStatus(fileId).then(status => {
                    const metadataStatus = status.metadata_extraction;
                    const isMetadataComplete = metadataStatus === 'COMPLETED' || metadataStatus === 'PARTIAL';
                    
                    if (isMetadataComplete) {
                      toast({
                        title: "Processing complete",
                        description: "Navigating to analysis page"
                      });
                      
                      setTimeout(() => {
                        router.push(`/extraction/${fileId}`);
                      }, 500);
                    } else {
                      // Not ready yet, start polling
                      handleUploadComplete(fileId);
                    }
                  }).catch(error => {
                    console.error("Error checking status:", error);
                    setIsNavigating(false);
                    setProcessingStatus(null);
                    toast({
                      title: "Error",
                      description: "Failed to check document status",
                      variant: "destructive"
                    });
                  });
                }
              }}
              disabled={!fileId || isNavigating}
              size="lg"
              className="bg-[hsl(var(--rai-primary))] hover:bg-[hsl(var(--rai-primary))/90] text-white px-12 py-4 text-lg font-semibold rounded-xl shadow-lg hover:shadow-xl transition-all duration-200 transform hover:-translate-y-0.5"
            >
              {isNavigating ? (
                <>
                  <Loader2 className="mr-3 h-5 w-5 animate-spin" />
                  Processing...
                </>
              ) : (
                <>
                  Analyze with RAi
                  <svg className="ml-3 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M13 7l5 5m0 0l-5 5m5-5H6" />
                  </svg>
                </>
              )}
            </Button>
          </div>
          </motion.div>
        </main>

        <footer className="bg-white border-t border-gray-200 mt-16">
          <div className="container mx-auto px-6 py-8">
            <div className="text-center space-y-2">
              <p className="text-gray-700 font-medium">
                RAi Compliance Engine - AI-Powered Financial Compliance Analysis
              </p>
              <p className="text-gray-500 text-sm">
                © {new Date().getFullYear()} RAi Firm. All rights reserved.
              </p>
            </div>
          </div>
        </footer>
        <Toaster />
      </div>
  )
}

